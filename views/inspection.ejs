<!DOCTYPE html>
<html lang="en">

<head>
  <link href="css/bootstrap.min.css" rel="stylesheet" type="text/css" id="bootstrap-css">
  <link href="css/primaryCSS.css" rel="stylesheet" type="text/css">
  <link href="css/font-awesome.min.css" rel="stylesheet" type="text/css">
  <script src="jquery-3.4.1.min.js"></script>
  <script src="bootstrap.min.js"></script>

  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Node App with 3D Model</title>
  <style>
		body { margin: 0; }
		canvas { width: 100%; height: 100% }
	</style>
</head>

<body>

<div id="throbber" style="display:none; min-height:120px;"></div>
<div id="noty-holder"></div>
<div id="container-fluid">

    <!-- Navigation -->
<nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
      <!-- Brand and toggle get grouped for better mobile display -->
      <div class="navbar-header">

          <!-- ADD MAIN ADDRESS REF AND HAVE LOCAL LINK PHOTO -->
          <a class="navbar-brand" href="">
              <img src="ula.png" alt="LOGO">
          </a>
      </div>
      <div class="collapse navbar-collapse">
        <ul class="nav navbar-nav">
            <li><a href="/">Home</a></li>
            <li class="active"> <a href="/inspection">Inspection Viewer</a> </li>
        </ul>
        <ul class="nav navbar-right top-nav dropdown">
            <!-- ADD Inspection DATE  -->
            <li>
            <a>Inspection Data Collected on <%= inspection_date.substring(0,inspection_date.indexOf("00:00"))%></a>
            </li>

        </ul>
      </div>


      <!-- Top Menu Items -->

      <div class="col-xs-6 col-sm-1 sidebar-offcanvas" id="sidebarLeft" role="navigation">

        <div class="collapse navbar-collapse navbar-ex1-collapse">
          <ul class="nav navbar-nav side-nav">
              <!-- List all Cable Sections by Cable Number-->
              <h5> All Cable Sections </h5>
              <li>
                <a href="#" id="ignore" data-toggle="collapse" data-target="#cable-1"> Cable 1 <i id="ignore" class="fa fa-fw fa-angle-down pull-right"></i></a>
                <ul id="cable-1" class="collapse">

                  <!-- Show cable 1 sections between 3 ft or 36 inches -->
                  <li>
                    <% var s = 36; %>
                    <a href="#" id="ignore" data-target="#cable1sub<%= s%>" data-toggle="collapse"><%=s-35%> - <%=s%> in.</a>
                    <ul id="cable1sub<%= s%>" class="collapse">
                    
                      <% models.forEach(function(model) { 
                          if(model.cable_number == 1) {
                            if(model.section_number <= s) {%>

                              <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: white;"> <%= model.section_number; %> in.</a></li>
                                
                            <% } else { %>
                                  </ul>
                                  </li>
                            <% s += 36; %>
                              <li>
                                <a href="#" id="ignore" data-target="#cable1sub<%= s%>" data-toggle="collapse"><%=s-35%> - <%=s%> in.</a>
                                  <ul id="cable1sub<%= s%>" class="collapse">
                                    <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: white;"> <%= model.section_number; %> in.</a></li>
                      <%    }  
                          } 
                        }); %> 
                    </ul>
                  </li>
                </ul>
              </li>
              <li>
                <a href="#" id="ignore" data-toggle="collapse" data-target="#cable-2"> Cable 2 <i id="ignore" class="fa fa-fw fa-angle-down pull-right"></i></a>
                <ul id="cable-2" class="collapse">

                  <!-- Show cable 1 sections between 3 ft or 36 inches -->
                  <li>
                    <% var s = 36; %>
                    <a href="#" id="ignore" data-target="#cable2sub<%= s%>" data-toggle="collapse"><%=s-35%> - <%=s%> in.</a>
                    <ul id="cable2sub<%= s%>" class="collapse">
                    
                      <% models.forEach(function(model) { 
                          if(model.cable_number == 2) {
                            if(model.section_number <= s) {%>

                              <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: white;"> <%= model.section_number; %> in.</a></li>
                                
                            <% } else { %>
                                  </ul>
                                  </li>
                            <% s += 36; %>
                              <li>
                                <a href="#" id="ignore" data-target="#cable2sub<%= s%>" data-toggle="collapse"><%=s-35%> - <%=s%> in.</a>
                                  <ul id="cable2sub<%= s%>" class="collapse">
                                    <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: white;"> <%= model.section_number; %> in.</a></li>
                      <%    }  
                          } 
                        }); %> 
                    </ul>
                  </li>
                </ul>
              </li>
              <li>
                <a href="#" id="ignore" data-toggle="collapse" data-target="#cable-3"> Cable 3 <i id="ignore" class="fa fa-fw fa-angle-down pull-right"></i></a>
                <ul id="cable-3" class="collapse">

                  <!-- Show cable 1 sections between 3 ft or 36 inches -->
                  <li>
                    <% var s = 36; %>
                    <a href="#" id="ignore" data-target="#cable3sub<%= s%>" data-toggle="collapse"><%=s-35%> - <%=s%> in.</a>
                    <ul id="cable3sub<%= s%>" class="collapse">
                    
                      <% models.forEach(function(model) { 
                          if(model.cable_number == 3) {
                            if(model.section_number <= s) {%>

                              <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: white;"> <%= model.section_number; %> in.</a></li>
                                
                            <% } else { %>
                                  </ul>
                                  </li>
                            <% s += 36; %>
                              <li>
                                <a href="#" id="ignore" data-target="#cable3sub<%= s%>" data-toggle="collapse"><%=s-35%> - <%=s%> in.</a>
                                  <ul id="cable3sub<%= s%>" class="collapse">
                                    <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: white;"> <%= model.section_number; %> in.</a></li>
                      <%    }  
                          } 
                        }); %> 
                    </ul>
                  </li>
                </ul>
              </li>
              <li>
                <a href="#" id="ignore" data-toggle="collapse" data-target="#cable-4"> Cable 4 <i id="ignore" class="fa fa-fw fa-angle-down pull-right"></i></a>
                <ul id="cable-4" class="collapse">

                  <!-- Show cable 1 sections between 3 ft or 36 inches -->
                  <li>
                    <% var s = 36; %>
                    <a href="#" id="ignore" data-target="#cable4sub<%= s%>" data-toggle="collapse"><%=s-35%> - <%=s%> in.</a>
                    <ul id="cable4sub<%= s%>" class="collapse">
                    
                      <% models.forEach(function(model) { 
                          if(model.cable_number == 4) {
                            if(model.section_number <= s) {%>

                              <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: white;"> <%= model.section_number; %> in.</a></li>
                                
                            <% } else { %>
                                  </ul>
                                  </li>
                            <% s += 36; %>
                              <li>
                                <a href="#" id="ignore" data-target="#cable4sub<%= s%>" data-toggle="collapse"><%=s-35%> - <%=s%> in.</a>
                                  <ul id="cable4sub<%= s%>" class="collapse">
                                    <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: white;"> <%= model.section_number; %> in.</a></li>
                      <%    }  
                          } 
                        }); %> 
                    </ul>
                  </li>
                </ul>
              </li>

            </ul>

        </div>

          <!--/.well -->
      </div>
            <!--/span-->

            <div class="page-wrapper">
              <!-- Canvas for Three.js-->
              <canvas id="myCanvasElement"></canvas>


              <!-- Flag/Unflag Buttons w/ Header for Section-->
              <% models.forEach(function(model) { %>
                <%  if (model.cable_section_id == sid && model.flagged == false) { %>
                  <h3>Cable: <%= model.cable_number%> - Section: <%= model.section_number%></h3>
                  <h4>Diameter: <%= model.diameter%> cm</h4>
                  <form method="POST" action="/inspection/flag?id=<%= model.inspection_date%>&sid=<%= sid%>">
                  <input type="submit" style="right:0; bottom:0;" id="flag" class="flag" value="FLAG">
                </form>

              <% } else if (model.cable_section_id == sid && model.flagged == true) { %>
                <h3 class="flagCable">Cable: <%= model.cable_number%> - Section: <%= model.section_number%></h3>
                <h4 class="flagCable">Diameter: <%= model.diameter%> cm</h4>
                <form method="POST" action="/inspection/unflag?id=<%= model.inspection_date%>&sid=<%= sid%>">
                <input type="submit" style="right:0; bottom:0;" id="unflag" class="flag" value="UNFLAG">
              <% } }); %>
                </form>


              <button type="button" style="bottom:0; left:0;" class="original" data-toggle="modal" data-target="#myModal">See Original Photos</button>


            </div>

            <!--/span-->

            <div class="collapse navbar-collapse navbar-ex1-collapse">
                <ul class="nav navbar-nav rightside-nav">
                  <h5 class="flagCable"> Flagged Sections </h5>
                    <!-- List all Flagged Sections -->
                    <!-- Cable 1 Flags -->
                    <li>
                      <a href="#" id="ignore" data-toggle="collapse" data-target="#flaggedcable-1"> Cable 1 <i id="ignore" class="fa fa-fw fa-angle-down pull-right"></i></a>
                      <ul id="flaggedcable-1" class="collapse">
      
                        <!-- Show cable 1 sections between 3 ft or 36 inches -->
                        <li>
                          <% var s = 36; %>
                          <a href="#" id="ignore" data-target="#flaggedcable1sub<%= s%>" data-toggle="collapse" style="color: orange;"><%=s-35%> - <%=s%> in.</a>
                          <ul id="flaggedcable1sub<%= s%>" class="collapse">
                          
                            <% models.forEach(function(model) { 
                                if(model.cable_number == 1 && model.flagged == true) {
                                  if(model.section_number <= s) {%>
      
                                    <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: orange;"> <%= model.section_number; %> in.</a></li>
                                      
                                  <% } else { %>
                                        </ul>
                                        </li>
                                  <% s += 36; %>
                                    <li>
                                      <a href="#" id="ignore" data-target="#flaggedcable1sub<%= s%>" data-toggle="collapse" style="color: orange;"><%=s-35%> - <%=s%> in.</a>
                                        <ul id="flaggedcable1sub<%= s%>" class="collapse">
                                          <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: orange;"> <%= model.section_number; %> in.</a></li>
                            <%    }  
                                } 
                              }); %> 
                          </ul>
                        </li>
                      </ul>
                    </li>
                    <!-- Cable 2 Flags -->
                    <li>
                      <a href="#" id="ignore" data-toggle="collapse" data-target="#flaggedcable-2"> Cable 2 <i id="ignore" class="fa fa-fw fa-angle-down pull-right"></i></a>
                      <ul id="flaggedcable-2" class="collapse">
      
                        <!-- Show cable 1 sections between 3 ft or 36 inches -->
                        <li>
                          <% var s = 36; %>
                          <a href="#" id="ignore" data-target="#flaggedcable2sub<%= s%>" data-toggle="collapse" style="color: orange;"><%=s-35%> - <%=s%> in.</a>
                          <ul id="flaggedcable2sub<%= s%>" class="collapse">
                          
                            <% models.forEach(function(model) { 
                                if(model.cable_number == 2 && model.flagged == true) {
                                  if(model.section_number <= s) {%>
      
                                    <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: orange;"> <%= model.section_number; %> in.</a></li>
                                      
                                  <% } else { %>
                                        </ul>
                                        </li>
                                  <% s += 36; %>
                                    <li>
                                      <a href="#" id="ignore" data-target="#flaggedcable2sub<%= s%>" data-toggle="collapse" style="color: orange;"><%=s-35%> - <%=s%> in.</a>
                                        <ul id="flaggedcable2sub<%= s%>" class="collapse">
                                          <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: orange;"> <%= model.section_number; %> in.</a></li>
                            <%    }  
                                } 
                              }); %> 
                          </ul>
                        </li>
                      </ul>
                    </li>
                    <!-- Cable 3 Flags -->
                    <li>
                      <a href="#" id="ignore" data-toggle="collapse" data-target="#flaggedcable-3"> Cable 3 <i id="ignore" class="fa fa-fw fa-angle-down pull-right"></i></a>
                      <ul id="flaggedcable-3" class="collapse">
      
                        <!-- Show  sections between 3 ft or 36 inches -->
                        <li>
                          <% var s = 36; %>
                          <a href="#" id="ignore" data-target="#flaggedcable3sub<%= s%>" data-toggle="collapse" style="color: orange;"><%=s-35%> - <%=s%> in.</a>
                          <ul id="flaggedcable3sub<%= s%>" class="collapse">
                          
                            <% models.forEach(function(model) { 
                                if(model.cable_number == 3 && model.flagged == true) {
                                  if(model.section_number <= s) {%>
      
                                    <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: orange;"> <%= model.section_number; %> in.</a></li>
                                      
                                  <% } else { %>
                                        </ul>
                                        </li>
                                  <% s += 36; %>
                                    <li>
                                      <a href="#" id="ignore" data-target="#flaggedcable3sub<%= s%>" data-toggle="collapse" style="color: orange;"><%=s-35%> - <%=s%> in.</a>
                                        <ul id="flaggedcable3sub<%= s%>" class="collapse">
                                          <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: orange;"> <%= model.section_number; %> in.</a></li>
                            <%    }  
                                } 
                              }); %> 
                          </ul>
                        </li>
                      </ul>
                    </li>
                    <!-- Cable 4 Flags -->
                    <li>
                      <a href="#" id="ignore" data-toggle="collapse" data-target="#flaggedcable-4"> Cable 4 <i id="ignore" class="fa fa-fw fa-angle-down pull-right"></i></a>
                      <ul id="flaggedcable-4" class="collapse">
      
                        <!-- Show  sections between 3 ft or 36 inches -->
                        <li>
                          <% var s = 36; %>
                          <a href="#" id="ignore" data-target="#flaggedcable4sub<%= s%>" data-toggle="collapse" style="color: orange;"><%=s-35%> - <%=s%> in.</a>
                          <ul id="flaggedcable4sub<%= s%>" class="collapse">
                          
                            <% models.forEach(function(model) { 
                                if(model.cable_number == 4 && model.flagged == true) {
                                  if(model.section_number <= s) {%>
      
                                    <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: orange;"> <%= model.section_number; %> in.</a></li>
                                      
                                  <% } else { %>
                                        </ul>
                                        </li>
                                  <% s += 36; %>
                                    <li>
                                      <a href="#" id="ignore" data-target="#flaggedcable4sub<%= s%>" data-toggle="collapse" style="color: orange;"><%=s-35%> - <%=s%> in.</a>
                                        <ul id="flaggedcable4sub<%= s%>" class="collapse">
                                          <li><a href="#<%= model.cable_section_id%>" id="<%= model.cable_section_id%>" style="color: orange;"> <%= model.section_number; %> in.</a></li>
                            <%    }  
                                } 
                              }); %> 
                          </ul>
                        </li>
                      </ul>
                    </li>

                </ul>
            </div>
              <!--/.well -->

              <div class="navbar-footer">
                <div class="progress">
                  <div class="progress-bar progress-bar-striped" style="width:<%= (sid/models.length) * 100 %>%">
                  </div>
                </div>
              </div>

</nav>

<!-- Modal for Original Photos -->
<div id="myModal" class="modal fade" role="dialog">
  <div class="modal-dialog">

    <!-- Modal content-->
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Original Images</h4>
      </div>
      <div class="modal-body">

        <!-- Image Carousel inside the modal -->
        <div class="container">
          <div id="myCarousel" class="carousel slide" data-ride="false">
            <!-- Indicators -->
            <ol class="carousel-indicators">
              <li data-target="#myCarousel" data-slide-to="0" class="active"></li>
              <li data-target="#myCarousel" data-slide-to="1"></li>
              <li data-target="#myCarousel" data-slide-to="2"></li>
              <li data-target="#myCarousel" data-slide-to="3"></li>
            </ol>

            <!-- Wrapper for original images -->
            <div class="carousel-inner">
              <% models.forEach(function(model) {
                if(model.cable_section_id == sid) {%>

              <div class="item active">
                <img src="<%= model.original_image1_path%>" alt="angle-A" style="width:100%;">
                <div class="carousel-caption">
                  <h3>Angle - A</h3>
                </div>
              </div>

              <div class="item">
                <img src="<%= model.original_image2_path%>" alt="angle-B" style="width:100%;">
                <div class="carousel-caption">
                  <h3>Angle - B</h3>
                </div>
              </div>

              <div class="item">
                <img src="<%= model.original_image3_path%>" alt="angle-C" style="width:100%;">
                <div class="carousel-caption">
                  <h3>Angle - C</h3>
                </div>
              </div>

              <div class="item">
                <img src="<%= model.original_image4_path%>" alt="angle-D" style="width:100%;">
                <div class="carousel-caption">
                  <h3>Angle - D</h3>
                </div>
              </div>
              <% }  %>
            <% }); %>
            </div>

            <!-- Left and right controls -->
            <a class="left carousel-control" href="#myCarousel" data-slide="prev">
              <span class="carousel-control-prev-icon"></span>
              <span class="sr-only">Previous</span>
            </a>
            <a class="right carousel-control" href="#myCarousel" data-slide="next">
              <span class="carousel-control-next-icon"></span>
              <span class="sr-only">Next</span>
            </a>
          </div>
        </div>
      </div>
      <!-- <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div> -->
    </div>

  </div>
</div>



    <hr>

    <footer>
        <p>Faber 2020</p>
    </footer>

</div><!-- /.container -->

</body>

</html>

<% models.forEach(function(model) {
  if(model.cable_section_id == sid) {%>
<script type="module">
 

// var testClick = document.getElementById('testClick');
// testClick.onclick = function()
// {
//     System.out.println(controls.target.get());
//      controls.target.set( 400, 0, 190 );
//      webGLRenderer.render(scene, camera);
// };
//


var buttons = document.getElementsByTagName("li");
for (let i = 0; i < buttons.length; i++) {
  buttons[i].addEventListener("click", onButtonClick, false);
  // console.log(buttons[i].id);


};


function onButtonClick(event) {
  if(event.target.id == "ignore"){
  }
  else if (event.target.id == "original_photos"){

  }
  else if (!isNaN(event.target.id) && event.target.id != ""){
    // console.log(event.target.id);

    // Update sid query string
    var url = window.location.href;
    url = url.substring(0, url.indexOf("sid=")) + "sid="+event.target.id;
    window.location.href = url;

      // if (history.pushState) {
      //   var urlParams = new URLSearchParams(window.location.search);
      //     var newurl = window.location.protocol + "//" + window.location.host + window.location.pathname + '?id='+ urlParams.get('id')+'&sid='+event.target.id;
      //     window.history.pushState({path:newurl},'',newurl);
      // }


    // controls.target.set( 400, 0, 190 );
    // webGLRenderer.render(scene, camera);
  }
}

import * as THREE from '/three.js/build/three.module.js';
import { DDSLoader } from '/three.js/jsm/loaders/DDSLoader.js';
import { MTLLoader } from '/three.js/jsm/jsm/loaders/MTLLoader.js';
import { OBJLoader } from '/three.js/jsm/jsm/loaders/OBJLoader.js';
import { OrbitControls } from '/three.js/jsm/controls/OrbitControls.js';
import { TrackballControls } from '/three.js/jsm/controls/TrackballControls.js';

var container;
var camera, scene, renderer, controls, boxCenter;

// Debug
var windowHalfX = window.innerWidth - 300;
var windowHalfY = window.innerHeight - 120;
// Debug

var object;
init();
//animate();

function init() {
  container = document.createElement( 'div' );
  document.body.appendChild( container );
  camera = new THREE.PerspectiveCamera( 40, window.innerWidth / window.innerHeight, 1, 1000 );
  camera.position.z = 0;
  camera.position.x = 10;
  camera.position.y = 0;

  // scene
  scene = new THREE.Scene();

  var pointLight = new THREE.PointLight( 0xffffff, 0.8 );
  camera.add( pointLight );
  scene.add( camera );

  renderer = new THREE.WebGLRenderer( { antialias: true , canvas: myCanvasElement} );
  renderer.setPixelRatio( window.devicePixelRatio );
  renderer.setSize( windowHalfX , windowHalfY);
  // document.body.appendChild( renderer.domElement );

  // manager
  var onProgress = function ( xhr ) {

  if ( xhr.lengthComputable ) {

    var percentComplete = xhr.loaded / xhr.total * 100;
    console.log( Math.round( percentComplete, 2 ) + '% downloaded' );

  }

  };

  var onError = function () { };

  var manager = new THREE.LoadingManager();
  manager.addHandler( /\.dds$/i, new DDSLoader() );

  var Check = 0;
  
  // Image array to create current segment texture
  var imgArr = [4];
  var image1 = new Image();	
  var image2 = new Image();
  var image3 = new Image();
  var image4 = new Image();
  
  // These image onloads chain together to self regulate construction of texture

  image1.onload = function(){
  image2.src = "<%= model.original_image2_path%>";
  imgArr[0] = image1;
  };
    
  image2.onload = function(){
  image3.src = "<%= model.original_image3_path%>";
  imgArr[1] = image2;
  };
  
  image3.onload = function(){
  image4.src = "<%= model.original_image4_path%>";
  imgArr[2] = image3;
  };
  image4.onload = function(){  // final image onload
  imgArr[3] = image4;			// All images are stored in imgArr in proper order
  beginTextureProcess(imgArr); // The image array is supplied and process begins
  };
  image1.src = "<%= model.original_image1_path%>";

  console.log(image1.src);
      
  
  // comment in the following line and import TGALoader if your asset uses TGA textures
  // manager.addHandler( /\.tga$/i, new TGALoader() );
  createControls( camera );

  let bBox = new THREE.Box3();
  let boxCenter = new THREE.Vector3();
  let boxSize = new THREE.Vector3();
  let boxDiagonal = boxSize.length();
  var loader = new OBJLoader();
  loader.load('Segment.obj',
    function onLoadObj(obj)
    {
      bBox.setFromObject(obj);
      bBox.getCenter(boxCenter);
      bBox.getSize(boxSize);
  
      boxDiagonal = boxSize.length();
  
      camera.lookAt(boxCenter);
      camera.far = boxDiagonal*10;
      camera.updateProjectionMatrix();
  
      controls.target = boxCenter;
      console.log(boxSize);
      animate();
    },
    function(object){
      animate();
    },
    function(xhr){
      console.log((xhr.loaded/xhr.total*100) + '% loaded');
    },
    function(error){
      console.log('An error happened');
    }
  );

  let mtlLoader = new MTLLoader();
		mtlLoader.load('Segment.mtl',
		// called when resource is loaded
		function ( mtl ) {
		// once material is read initiate the obj Loading
		let objLoader = new OBJLoader();
		// objLoader needs material information.
		objLoader.setMaterials(mtl);
		// load a resource
		objLoader.load('Segment.obj' ,function(object){
		console.log(object);
		//scene.add( object );
		render(); // may be make a call to your render function
		})
		}
		);

		// texture
		var createCroppedImg = function(bottom, side1, top, side2){
			var imgWidth = 1920;
			var imgHeight = 1080;
			
			var canvas = document.createElement('canvas'),
			ctx = canvas.getContext('2d');
			canvas.width = 1920;
			canvas.height = 290;
			ctx.drawImage(side1, 20, 0, 1920, 290);
			//canvas.position.set = (boxCenter.x, boxCenter.y+3, boxCenter.z);
			
			var texture = new THREE.Texture(canvas);
			texture.needsUpdate = true;
			return texture;
		}
		
		//create canvas
		var createCanvasTexture = function(top, right, bottom, left){
			var imgWidth = 1920;
			var imgHeight = 1080;
			
			var topCanvas = document.createElement('canvas'), 
			ctxT = topCanvas.getContext('2d');
			topCanvas.width = 1920;
			topCanvas.height = 240;
			ctxT.fillStyle = '#30acec';
			ctxT.translate(topCanvas.width / 2, topCanvas.height / 2);
			ctxT.rotate(-Math.PI/40);
			ctxT.rotate(-Math.PI);
			ctxT.translate(-topCanvas.width / 2, -topCanvas.height / 2);
			ctxT.lineWidth = 1;
			ctxT.fillRect(0.5, 0.5, topCanvas.width - 1, topCanvas.height - 1);
			ctxT.drawImage(top, 0, -480, 1920, 1080);
			
			
			var rightCanvas = document.createElement('canvas'), 
			ctxR = rightCanvas.getContext('2d');
			rightCanvas.width = 1920;
			rightCanvas.height = 240;
			ctxR.fillStyle = '#30acec';
			ctxR.translate(rightCanvas.width / 2, rightCanvas.height / 2);
			ctxR.rotate(-Math.PI/30);
			ctxR.rotate(-Math.PI);
			ctxR.translate(-rightCanvas.width / 2, -rightCanvas.height / 2);
			ctxR.lineWidth = 1;
			ctxR.fillRect(0.5, 0.5, rightCanvas.width - 1, rightCanvas.height - 1);
			ctxR.drawImage(right, 0, -475, 1920, 1080);
			
			var bottomCanvas = document.createElement('canvas'), 
			ctxB = bottomCanvas.getContext('2d');
			bottomCanvas.width = 1920;
			bottomCanvas.height = 240;
			ctxB.fillStyle = '#30acec';
			ctxB.translate(bottomCanvas.width / 2, bottomCanvas.height / 2);
			ctxB.rotate(-Math.PI/35);
			ctxB.rotate(-Math.PI);
			ctxB.translate(-bottomCanvas.width / 2, -bottomCanvas.height / 2);
			ctxB.lineWidth = 1;
			ctxB.fillRect(0.5, 0.5, bottomCanvas.width - 1, bottomCanvas.height - 1);
			ctxB.drawImage(bottom, 0, -480, 1920, 1080);
			
			
			var leftCanvas = document.createElement('canvas'), 
			ctxL = leftCanvas.getContext('2d');
			leftCanvas.width = 1920;
			leftCanvas.height = 240;
			ctxL.fillStyle = '#30acec';
			ctxL.translate(leftCanvas.width / 2, leftCanvas.height / 2);
			ctxL.rotate(-Math.PI/40);
			ctxL.rotate(-Math.PI);
			ctxL.translate(-leftCanvas.width / 2, -leftCanvas.height / 2);
			ctxL.lineWidth = 1;
			ctxL.fillRect(0.5, 0.5, leftCanvas.width - 1, leftCanvas.height - 1);
			ctxL.drawImage(left, 0, -425, 1920, 1080);
			
			//var image = new Image();
			//image.src = sideCanvas.toDataURL("image/jpg");
			
			var canvas = document.createElement('canvas'),
			ctx = canvas.getContext('2d');
			canvas.width = 960;
			canvas.height = 1400;
			ctx.fillStyle = '#30acec';
			ctx.lineWidth = 1;
			ctx.fillRect(0.5, 0.5, canvas.width - 1, canvas.height - 1);
			//ctx.translate(imgWidth / 2, imgHeight / 2);
			ctx.rotate(Math.PI/2);
			//ctx.translate(-imgWidth / 2, -imgHeight / 2);
			
			ctx.drawImage(rightCanvas, -240, -720, 1920, 240);
			ctx.drawImage(topCanvas, -410, -960, 1920, 240);
			ctx.drawImage(bottomCanvas, -180, -480, 1900, 240);
			ctx.drawImage(leftCanvas, -80, -240, 1920, 240);
			var texture = new THREE.Texture(canvas);
			texture.needsUpdate = true;
			return texture;
		};
    

		var beginTextureProcess = function(imgArr){
			//while (imagesLoaded != 4){
			//	console.log(imagesLoaded);
			//}
			
			// Make map, and geometry, use real photo
			//var picTex = new THREE.TextureLoader().load("Segment1.1.jpg");
			var picMat = new THREE.MeshBasicMaterial({map: createCanvasTexture(imgArr[0], imgArr[1], imgArr[2], imgArr[3])});
			//var picMat = new THREE.MeshBasicMaterial({color: 0xffff00, wireframe: true});
			var picGeo = new THREE.CylinderGeometry(1, 1, 12, 32);
			var picMesh = new THREE.Mesh(picGeo, picMat);
			
			scene.add(picMesh);
			picMesh.rotation.x = 1.57;
			picMesh.rotation.y = -2.25;
			picMesh.position.set(boxCenter.x, boxCenter.y, boxCenter.z);
			picMesh.scale.y = 0.5;
			render();
			animate();
			//console.log(picMesh);
			
		};
		
	
	var axesHelper = new THREE.AxesHelper(10);
    scene.add( axesHelper );

  

  //
  // renderer = new THREE.WebGLRenderer();
  // renderer.setPixelRatio( window.devicePixelRatio );
  // renderer.setSize( window.innerWidth, window.innerHeight );
  // container.appendChild( renderer.domElement );
  // document.addEventListener( 'mousemove', onDocumentMouseMove, false );
  //

  console.log(imgArr);

  window.addEventListener( 'resize', onWindowResize, false );

  
  // controls

}
function createControls( camera ) {

controls = new TrackballControls( camera, renderer.domElement );
controls.addEventListener("change",render,false)

controls.rotateSpeed = 1.0;
controls.zoomSpeed = 1.0;
controls.enableZoom = true;
controls.enablePan = false;
// controls.minDistance = 100;
// controls.maxDistance = 500;

}

function onWindowResize() {
  camera.aspect = window.innerWidth / window.innerHeight;
  camera.updateProjectionMatrix();

  renderer.setSize( window.innerWidth - 300, window.innerHeight - 120);
  controls.handleResize();
}

function animate() {

  requestAnimationFrame( animate );
  controls.update();

  render();

}


//
function render() {
  // System.out.println(camera.getWorldDirection ( target : Vector3 ) );
  renderer.render( scene, camera );
}

</script>
<% }  %>
<% }); %>  