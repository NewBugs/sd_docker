<!DOCTYPE html>
<html lang="en">

<head>
  <link href="bootstrap.min.css" rel="stylesheet" type="text/css" id="bootstrap-css">
  <link href="extra.css" rel="stylesheet" type="text/css">
  <script src="jquery-3.4.1.min.js"></script>
  <script src="bootstrap.min.js"></script>

  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta http-equiv="X-UA-Compatible" content="ie=edge">
  <title>Node App with 3D Model</title>
  <style>
		body { margin: 0; }
		canvas { width: 100%; height: 100% }
	</style>
</head>

<body>
<div id="throbber" style="display:none; min-height:120px;"></div>
<div id="noty-holder"></div>
<div id="wrapper">
    <!-- Navigation -->
    <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation">
        <!-- Brand and toggle get grouped for better mobile display -->
        <div class="navbar-header">
            <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-ex1-collapse">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
            </button>
            <!-- ADD MAIN ADDRESS REF AND HAVE LOCAL LINK PHOTO -->
            <a class="navbar-brand" href="">
                <img src="ula.png" alt="LOGO">
            </a>
        </div>

        <!-- Top Menu Items -->
        <ul class="nav navbar-right top-nav">
            <!-- ADD Inspection DATE  -->
            <li>
            <a>Inspection Data Colllected on 1/16/2020</a>
            </li>

        </ul>

        <!-- Sidebar Menu Items - These collapse to the responsive navigation menu on small screens -->
        <div class="collapse navbar-collapse navbar-ex1-collapse">
            <ul class="nav navbar-nav side-nav">

                <li>
                    <a href="#" data-toggle="collapse" data-target="#cable-1"> Cable 1 <i class="fa fa-fw fa-angle-down pull-right"></i></a>
                    <ul id="cable-1" class="collapse">
                      <% models.forEach(function(model) { %>
                        <% if(model.cable_number == 1) {%>
                        <li><a href="#" id="testClick"><i class="fa fa-angle-double-right"></i> <%= model.section_number; %> </a></li>
                        <% } %>
                      <% }); %>


                    </ul>
                </li>
                <li>
                    <a href="#" data-toggle="collapse" data-target="#cable-2"> Cable 2 <i class="fa fa-fw fa-angle-down pull-right"></i></a>
                    <ul id="cable-2" class="collapse">
                      <% models.forEach(function(model) { %>

                        <% if(model.cable_number == 2) { %>
                        <li><a href="#" id="testClick2"><i class="fa fa-angle-double-right"></i> <%= model.section_number; %> </a></li>
                        <% } %>
                      <% }); %>


                    </ul>
                </li>

            </ul>
        </div>
        <!-- /.navbar-collapse -->
    </nav>

    <div id="page-wrapper">
        <div class="container-fluid">
          <canvas id="myCanvasElement">
          </canvas>

          <script type="module">

          import * as THREE from '/three.js/build/three.module.js';
          import { OBJLoader } from '/three.js/jsm/loaders/OBJLoader.js';
          import { OrbitControls } from '/three.js/jsm/controls/OrbitControls.js';
          import { TrackballControls } from '/three.js/jsm/controls/TrackballControls.js';

          var container;
          var camera, scene, renderer, controls;

          // Debug
          var windowHalfX = window.innerWidth - 350;
          var windowHalfY = window.innerHeight - 120;
          // Debug

          var object;
          init();
          animate();

          function init() {
            container = document.createElement( 'div' );
            document.body.appendChild( container );
            camera = new THREE.PerspectiveCamera( 45, window.innerWidth / window.innerHeight, 1, 1000 );
            camera.position.z = 190;
            camera.position.x = 400;

            // scene
            scene = new THREE.Scene();

            var pointLight = new THREE.PointLight( 0xffffff, 0.8 );
            camera.add( pointLight );
            scene.add( camera );

            renderer = new THREE.WebGLRenderer( { antialias: true , canvas: myCanvasElement} );
            renderer.setPixelRatio( window.devicePixelRatio );
            renderer.setSize( windowHalfX , windowHalfY);
            // document.body.appendChild( renderer.domElement );



            // manager
            function loadModel() {
              object.traverse( function ( child ) {
                if ( child.isMesh ) child.material.map = texture;
              } );
              object.position.y = - 80;


              // DEBUG:
              var bb = new THREE.Box3()
              bb.setFromObject(object);
              bb.center(controls.target);

              scene.add( object );
            }

            var manager = new THREE.LoadingManager( loadModel );
            manager.onProgress = function ( item, loaded, total ) {
              console.log( item, loaded, total );
            };

            // texture
            var textureLoader = new THREE.TextureLoader( manager );
            var texture = textureLoader.load( 'textures/uv_grid_opengl.jpg' );

            // model
            function onProgress( xhr ) {
              if ( xhr.lengthComputable ) {
                var percentComplete = xhr.loaded / xhr.total * 100;
                console.log( 'model ' + Math.round( percentComplete, 2 ) + '% downloaded' );
              }
            }

            function onError() {}
            var loader = new OBJLoader( manager );
            loader.load( 'column.obj', function ( obj ) {
              object = obj;
            }, onProgress, onError );

            //
            // renderer = new THREE.WebGLRenderer();
            // renderer.setPixelRatio( window.devicePixelRatio );
            // renderer.setSize( window.innerWidth, window.innerHeight );
            // container.appendChild( renderer.domElement );
            // document.addEventListener( 'mousemove', onDocumentMouseMove, false );
            //

            window.addEventListener( 'resize', onWindowResize, false );


            // controls
            createControls( camera );

          }
        function createControls( camera ) {

  				controls = new TrackballControls( camera, renderer.domElement );

  				controls.rotateSpeed = 1.0;
  				controls.zoomSpeed = 1.0;
          controls.enableZoom = true;
          controls.enablePan = false;
          controls.minDistance = 100;
          controls.maxDistance = 500;

  			}

          function onWindowResize() {
            camera.aspect = (window.innerWidth -350) / (window.innerHeight-120);
            camera.updateProjectionMatrix();

            renderer.setSize( window.innerWidth - 350, window.innerHeight - 120);
            controls.handleResize();
          }

          function animate() {

    				requestAnimationFrame( animate );

    				controls.update();

    				render();

    			}


          //
          function render() {
            var axesHelper = new THREE.AxesHelper(100);
            scene.add( axesHelper );

            // System.out.println(camera.getWorldDirection ( target : Vector3 ) );
            renderer.render( scene, camera );
          }

          var testClick = document.getElementById('testClick');
          testClick.onclick = function()
          {
              System.out.println(controls.target.get());
               controls.target.set( 400, 0, 190 );
               webGLRenderer.render(scene, camera);
          };
          </script>


            <!-- Page Heading -->
            <!-- <div class="row" id="main" >
                <div class="col-sm-12 col-md-12 well" id="content">
                </div>
            </div> -->
            <!-- /.row -->
        </div>
        <!-- /.container-fluid -->
    </div>
    <!-- /#page-wrapper -->
</div><!-- /#wrapper -->

</body>

</html>
